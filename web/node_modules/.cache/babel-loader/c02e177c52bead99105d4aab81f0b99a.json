{"ast":null,"code":"var _jsxFileName = \"/Users/DavidTerral/Documents/td-data-generation/web/src/components/OptionsModal.js\";\nimport React, { Component } from \"react\";\nimport { Modal, ModalHeader, ModalBody, Input, ModalFooter, Button } from \"reactstrap\";\n\nclass OptionsModal extends Component {\n  constructor(props) {\n    super(props);\n    this.toggleModal = this.toggleModal.bind(this);\n    this.confirmModal = this.confirmModal.bind(this);\n    this.state = {\n      type: this.props.type,\n      option1: \"\",\n      option2: \"\",\n      option3: \"\",\n      isOpen: false\n    };\n  }\n\n  toggleModal() {\n    this.setState(prevState => ({\n      isOpen: !prevState.isOpen\n    }));\n  }\n\n  confirmModal() {\n    this.toggleModal();\n    const onModalChange = this.props.onModalChange;\n    const _this$state = this.state,\n          option1 = _this$state.option1,\n          option2 = _this$state.option2,\n          option3 = _this$state.option3;\n    console.log(option1);\n    onModalChange(option1, option2, option3);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"secondary\",\n      onClick: this.toggleModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Options\"), React.createElement(Modal, {\n      isOpen: this.state.isOpen,\n      toggle: this.toggleModal //   className={this.props.className}\n      ,\n      unmountOnClose: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: this.toggleModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Options\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"select\",\n      name: \"datatype\",\n      id: \"type-\".concat(this.props.id),\n      onChange: e => this.setState({\n        option1: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Integer\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Time-Series\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Phone Number\")), React.createElement(Input, {\n      type: \"number\",\n      name: \"numcols\",\n      id: \"numcols-\".concat(this.props.id),\n      onChange: e => this.setState({\n        option2: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(Input, {\n      type: \"number\",\n      name: \"foo\",\n      id: \"foo-\".concat(this.props.id),\n      onChange: e => this.setState({\n        option3: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })), React.createElement(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.confirmModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Confirm Options\"))));\n  }\n\n}\n\nexport { OptionsModal };","map":{"version":3,"sources":["/Users/DavidTerral/Documents/td-data-generation/web/src/components/OptionsModal.js"],"names":["React","Component","Modal","ModalHeader","ModalBody","Input","ModalFooter","Button","OptionsModal","constructor","props","toggleModal","bind","confirmModal","state","type","option1","option2","option3","isOpen","setState","prevState","onModalChange","console","log","render","id","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,KADF,EAEEC,WAFF,EAGEC,SAHF,EAIEC,KAJF,EAKEC,WALF,EAMEC,MANF,QAOO,YAPP;;AASA,MAAMC,YAAN,SAA2BP,SAA3B,CAAqC;AACnCQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKE,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,KAAKL,KAAL,CAAWK,IADN;AAEXC,MAAAA,OAAO,EAAE,EAFE;AAGXC,MAAAA,OAAO,EAAE,EAHE;AAIXC,MAAAA,OAAO,EAAE,EAJE;AAKXC,MAAAA,MAAM,EAAE;AALG,KAAb;AAOD;;AAEDR,EAAAA,WAAW,GAAG;AACZ,SAAKS,QAAL,CAAcC,SAAS,KAAK;AAC1BF,MAAAA,MAAM,EAAE,CAACE,SAAS,CAACF;AADO,KAAL,CAAvB;AAGD;;AAEDN,EAAAA,YAAY,GAAG;AACb,SAAKF,WAAL;AADa,UAELW,aAFK,GAEa,KAAKZ,KAFlB,CAELY,aAFK;AAAA,wBAGyB,KAAKR,KAH9B;AAAA,UAGLE,OAHK,eAGLA,OAHK;AAAA,UAGIC,OAHJ,eAGIA,OAHJ;AAAA,UAGaC,OAHb,eAGaA,OAHb;AAIbK,IAAAA,OAAO,CAACC,GAAR,CAAYR,OAAZ;AACAM,IAAAA,aAAa,CAACN,OAAD,EAAUC,OAAV,EAAmBC,OAAnB,CAAb;AACD;;AAEDO,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,WAAd;AAA0B,MAAA,OAAO,EAAE,KAAKd,WAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAIE,oBAAC,KAAD;AACE,MAAA,MAAM,EAAE,KAAKG,KAAL,CAAWK,MADrB;AAEE,MAAA,MAAM,EAAE,KAAKR,WAFf,CAGE;AAHF;AAIE,MAAA,cAAc,EAAE,KAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME,oBAAC,WAAD;AAAa,MAAA,MAAM,EAAE,KAAKA,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANF,EAOE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,EAAE,iBAAU,KAAKD,KAAL,CAAWgB,EAArB,CAHJ;AAIE,MAAA,QAAQ,EAAEC,CAAC,IAAI,KAAKP,QAAL,CAAc;AAAEJ,QAAAA,OAAO,EAAEW,CAAC,CAACC,MAAF,CAASC;AAApB,OAAd,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAPF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eARF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBATF,CADF,EAYE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,IAAI,EAAC,SAFP;AAGE,MAAA,EAAE,oBAAa,KAAKnB,KAAL,CAAWgB,EAAxB,CAHJ;AAIE,MAAA,QAAQ,EAAEC,CAAC,IAAI,KAAKP,QAAL,CAAc;AAAEH,QAAAA,OAAO,EAAEU,CAAC,CAACC,MAAF,CAASC;AAApB,OAAd,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,EAkBE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,IAAI,EAAC,KAFP;AAGE,MAAA,EAAE,gBAAS,KAAKnB,KAAL,CAAWgB,EAApB,CAHJ;AAIE,MAAA,QAAQ,EAAEC,CAAC,IAAI,KAAKP,QAAL,CAAc;AAAEF,QAAAA,OAAO,EAAES,CAAC,CAACC,MAAF,CAASC;AAApB,OAAd,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBF,CAPF,EAgCE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAwB,MAAA,OAAO,EAAE,KAAKhB,YAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CAhCF,CAJF,CADF;AA6CD;;AA1EkC;;AA6ErC,SAASL,YAAT","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Input,\n  ModalFooter,\n  Button\n} from \"reactstrap\";\n\nclass OptionsModal extends Component {\n  constructor(props) {\n    super(props);\n    this.toggleModal = this.toggleModal.bind(this);\n    this.confirmModal = this.confirmModal.bind(this);\n    this.state = {\n      type: this.props.type,\n      option1: \"\",\n      option2: \"\",\n      option3: \"\",\n      isOpen: false\n    };\n  }\n\n  toggleModal() {\n    this.setState(prevState => ({\n      isOpen: !prevState.isOpen\n    }));\n  }\n\n  confirmModal() {\n    this.toggleModal();\n    const { onModalChange } = this.props;\n    const { option1, option2, option3 } = this.state;\n    console.log(option1);\n    onModalChange(option1, option2, option3);\n  }\n\n  render() {\n    return (\n      <div>\n        <Button color=\"secondary\" onClick={this.toggleModal}>\n          Options\n        </Button>\n        <Modal\n          isOpen={this.state.isOpen}\n          toggle={this.toggleModal}\n          //   className={this.props.className}\n          unmountOnClose={false}\n        >\n          <ModalHeader toggle={this.toggleModal}>Options</ModalHeader>\n          <ModalBody>\n            <Input\n              type=\"select\"\n              name=\"datatype\"\n              id={`type-${this.props.id}`}\n              onChange={e => this.setState({ option1: e.target.value })}\n            >\n              <option>Integer</option>\n              <option>Time-Series</option>\n              <option>Email</option>\n              <option>Phone Number</option>\n            </Input>\n            <Input\n              type=\"number\"\n              name=\"numcols\"\n              id={`numcols-${this.props.id}`}\n              onChange={e => this.setState({ option2: e.target.value })}\n            />\n            <Input\n              type=\"number\"\n              name=\"foo\"\n              id={`foo-${this.props.id}`}\n              onChange={e => this.setState({ option3: e.target.value })}\n            />\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" onClick={this.confirmModal}>\n              Confirm Options\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport { OptionsModal };\n"]},"metadata":{},"sourceType":"module"}