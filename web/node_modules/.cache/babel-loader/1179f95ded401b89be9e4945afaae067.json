{"ast":null,"code":"var _jsxFileName = \"/Users/DavidTerral/Documents/td-data-generation/web/src/components/GeneratorForm.js\";\nimport React, { Component } from \"react\";\nimport { Form, Button, Input, Label, Col, Row, FormGroup } from \"reactstrap\";\nimport { GeneratorInput as GeneratorColumnInput } from \"./GeneratorColumnInput\";\n\nclass GeneratorForm extends Component {\n  constructor() {\n    super();\n    this.dataTypeChanged = this.dataTypeChanged.bind(this);\n    this.numColsChanged = this.numColsChanged.bind(this);\n    this.state = {\n      numRows: \"\",\n      fileType: \"\",\n      Cols: []\n    };\n  }\n\n  dataTypeChanged(id, type) {}\n\n  numColsChanged() {}\n\n  render() {\n    return React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Column Options\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Column Data Type\")), React.createElement(Col, {\n      md: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Number of Columns\"))), React.createElement(GeneratorColumnInput, {\n      id: 0,\n      dataTypeChanged: this.dataTypeChanged,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(GeneratorColumnInput, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(GeneratorColumnInput, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Row & File Options\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Number of Rows\"), React.createElement(Input, {\n      type: \"number\",\n      name: \"numrows\",\n      id: \"numrows\",\n      onChange: e => this.setState({\n        numRows: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })), React.createElement(Col, {\n      md: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"File Format\"), React.createElement(Input, {\n      type: \"select\",\n      name: \"filetype\",\n      id: \"filetype\",\n      onChange: e => this.setState({\n        fileType: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"CSV\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Excel\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"JSON\")))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      color: \"success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Generate Data\"));\n  }\n\n}\n\nexport { GeneratorForm };","map":{"version":3,"sources":["/Users/DavidTerral/Documents/td-data-generation/web/src/components/GeneratorForm.js"],"names":["React","Component","Form","Button","Input","Label","Col","Row","FormGroup","GeneratorInput","GeneratorColumnInput","GeneratorForm","constructor","dataTypeChanged","bind","numColsChanged","state","numRows","fileType","Cols","id","type","render","e","setState","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Button, Input, Label, Col, Row, FormGroup } from \"reactstrap\";\nimport { GeneratorInput as GeneratorColumnInput } from \"./GeneratorColumnInput\";\n\nclass GeneratorForm extends Component {\n  constructor() {\n    super();\n    this.dataTypeChanged = this.dataTypeChanged.bind(this);\n    this.numColsChanged = this.numColsChanged.bind(this);\n    this.state = {\n      numRows: \"\",\n      fileType: \"\",\n      Cols: []\n    };\n  }\n\n  dataTypeChanged(id, type) {}\n\n  numColsChanged() {}\n\n  render() {\n    return (\n      <Form>\n        <h5>Column Options</h5>\n        <hr />\n        <Row>\n          <Col md={3}>\n            <Label>Column Data Type</Label>\n          </Col>\n          <Col md={3}>\n            <Label>Number of Columns</Label>\n          </Col>\n        </Row>\n        <GeneratorColumnInput id={0} dataTypeChanged={this.dataTypeChanged} />\n        <GeneratorColumnInput />\n        <GeneratorColumnInput />\n        <br />\n        <h5>Row & File Options</h5>\n        <hr />\n        <FormGroup row>\n          <Col md={3}>\n            <Label>Number of Rows</Label>\n            <Input\n              type=\"number\"\n              name=\"numrows\"\n              id=\"numrows\"\n              onChange={e => this.setState({ numRows: e.target.value })}\n            />\n          </Col>\n          <Col md={2}>\n            <Label>File Format</Label>\n            <Input\n              type=\"select\"\n              name=\"filetype\"\n              id=\"filetype\"\n              onChange={e => this.setState({ fileType: e.target.value })}\n            >\n              <option>CSV</option>\n              <option>Excel</option>\n              <option>JSON</option>\n            </Input>\n          </Col>\n        </FormGroup>\n        <hr />\n        <Button type=\"submit\" color=\"success\">\n          Generate Data\n        </Button>\n      </Form>\n    );\n  }\n}\n\nexport { GeneratorForm };\n"]},"metadata":{},"sourceType":"module"}