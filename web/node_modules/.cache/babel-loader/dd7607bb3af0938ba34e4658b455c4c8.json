{"ast":null,"code":"var _jsxFileName = \"/Users/DavidTerral/Documents/td-data-generation/web/src/components/GeneratorForm.js\";\nimport React, { Component } from \"react\";\nimport { Form, Button, Input, Label, Col, FormGroup } from \"reactstrap\";\nimport { GeneratorInput as GeneratorColumnInput } from \"./GeneratorColumnInput\";\n\nclass GeneratorForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      numRows: \"\",\n      fileType: \"\",\n      generatorOptions: \"\"\n    };\n  }\n\n  render() {\n    return React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(GeneratorColumnInput, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }), React.createElement(GeneratorColumnInput, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }), React.createElement(GeneratorColumnInput, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }), React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Number of Rows:\"), React.createElement(Input, {\n      type: \"number\",\n      name: \"numrows\",\n      id: \"numrows\",\n      onChange: e => this.setState({\n        numRows: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    })), React.createElement(Col, {\n      md: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Exported File Type:\"), React.createElement(Input, {\n      type: \"select\",\n      name: \"filetype\",\n      id: \"filetype\",\n      onChange: e => this.setState({\n        fileType: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"CSV\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Excel\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"JSON\")))), React.createElement(Button, {\n      type: \"submit\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Generate Data\"));\n  }\n\n}\n\nexport { GeneratorForm };","map":{"version":3,"sources":["/Users/DavidTerral/Documents/td-data-generation/web/src/components/GeneratorForm.js"],"names":["React","Component","Form","Button","Input","Label","Col","FormGroup","GeneratorInput","GeneratorColumnInput","GeneratorForm","constructor","state","numRows","fileType","generatorOptions","render","e","setState","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,KAA9B,EAAqCC,GAArC,EAA0CC,SAA1C,QAA2D,YAA3D;AACA,SAASC,cAAc,IAAIC,oBAA3B,QAAuD,wBAAvD;;AAEA,MAAMC,aAAN,SAA4BT,SAA5B,CAAsC;AACpCU,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,EADE;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXC,MAAAA,gBAAgB,EAAE;AAHP,KAAb;AAKD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,SAAD;AAAW,MAAA,GAAG,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,IAAI,EAAC,SAFP;AAGE,MAAA,EAAE,EAAC,SAHL;AAIE,MAAA,QAAQ,EAAEC,CAAC,IAAI,KAAKC,QAAL,CAAc;AAAEL,QAAAA,OAAO,EAAEI,CAAC,CAACE,MAAF,CAASC;AAApB,OAAd,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EAUE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,EAAE,EAAC,UAHL;AAIE,MAAA,QAAQ,EAAEH,CAAC,IAAI,KAAKC,QAAL,CAAc;AAAEJ,QAAAA,QAAQ,EAAEG,CAAC,CAACE,MAAF,CAASC;AAArB,OAAd,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAPF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,CAFF,CAVF,CAJF,EA4BE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,KAAK,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBA5BF,CADF;AAkCD;;AA7CmC;;AAgDtC,SAASV,aAAT","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Button, Input, Label, Col, FormGroup } from \"reactstrap\";\nimport { GeneratorInput as GeneratorColumnInput } from \"./GeneratorColumnInput\";\n\nclass GeneratorForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      numRows: \"\",\n      fileType: \"\",\n      generatorOptions: \"\"\n    };\n  }\n\n  render() {\n    return (\n      <Form>\n        <GeneratorColumnInput />\n        <GeneratorColumnInput />\n        <GeneratorColumnInput />\n        <FormGroup row>\n          <Col md={3}>\n            <Label>Number of Rows:</Label>\n            <Input\n              type=\"number\"\n              name=\"numrows\"\n              id=\"numrows\"\n              onChange={e => this.setState({ numRows: e.target.value })}\n            />\n          </Col>\n          <Col md={2}>\n            <Label>Exported File Type:</Label>\n            <Input\n              type=\"select\"\n              name=\"filetype\"\n              id=\"filetype\"\n              onChange={e => this.setState({ fileType: e.target.value })}\n            >\n              <option>CSV</option>\n              <option>Excel</option>\n              <option>JSON</option>\n            </Input>\n          </Col>\n        </FormGroup>\n        <Button type=\"submit\" color=\"primary\">\n          Generate Data\n        </Button>\n      </Form>\n    );\n  }\n}\n\nexport { GeneratorForm };\n"]},"metadata":{},"sourceType":"module"}